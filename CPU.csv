opcode,notes,op,type,op binary (5bits),stack notation,P,P9,R,A,B,T,S,IO,Adress,slot0,slot1,slot2,slot3,T S data stack[1..8],R return stack[1..8]
;, return,x00,branch,00000,R:  a -,P=R,,pop R,,,,,,,,,,,,pop
ex, execute (swap P and R),x01,branch,00001,R:  - P   P:   - R,swap P R,,swap P R,,,,,,,,,,,,
jump,jump to name,x02,branch,00010,D:  -  ,P=Adress,,,,,,,,,,,,,,
call, call to name,x03,branch,00011,R:   - a,P=Adress,,R=P,,,,,,,,,,,,
unext,loop in I (decr R),x04,branch,00100,R:  n - (n-1)  R: 0 -  ,after P=slot+1,,if R=0 pop R else R=R-1,,,,,,,,,,,,
next,loop (decr R),x05,branch,00101,R:  n - (n-1)  R: 0 -  ,P=P+1,,if R=0 pop R else R=R-1,,,,,,,,,,,,
if,jump if T=0,x06,branch,00110,D:  x  -  x,,,,,,if T=0 ,,,,,,,,,
-if,jump if T>=0,x07,branch,00111,D:  x  -  x,,,,,,if T>0,,,,,,,,,
@p,literal (auto incr),x08,memory,01000,D:    -   n,P=P+1,,,,,T=[P],,,,,,,,,
@+,fetch via A (auto incr),x09,memory,01001,D:  -  x,,,,A=A+1,,T=[A],,,,,,,,,
@b,fetch via B,x0A,memory,01010,D:  -  x,,,,,,T=[B],,,,,,,,,
@,fetch via A,x0B,memory,01011,D:  -  x,,,,,,T=[A],,,,,,,,,
!p,store via P (auto incr),x0C,memory,01100,D:  x  -  ,P=P+1,,,,,,,,[P]=T,,,,,pop,
!+,store via A (auto incr),x0D,memory,01101,D:  x  -  ,,,,A=A+1,,,,,[A]=T,,,,,pop,
!b,store via B,x0E,memory,01110,D:  -  x,,,,,,,,,[B]=T,,,,,pop,
!,store via A,x0F,memory,01111,D:  x  -  ,,,,,,,,,[A]=T,,,,,pop,
+*,multiply step,x10,math,10000,D:  x1 x2  A:  - x1 x3,,,,,,,,,,,,,,,
2*,left shift,x11,math,10001,D:  x1  -  x2,,,,,,"T=shift(T) left  T0=0 , T17 lost ",,,,,,,,,
2/,right shift (signed),x12,math,10010,D:  x1  -  x2,,,,,,"T=shift(T) right  T17=propagate , T0 lost ",,,,,,,,,
-,invert all bits,x13,bit-wise,10011,D:  x1  -  x2,,,,,,inv T,,,,,,,,,
+,add (or add with carry),x14,math,10100,D:  x1 x2  -  x3,,,,,,"T=T+S  , T17=carry",,,,,,,,,
and,,x15,bit-wise,10101,D:  x1 x2  -  x3,,,,,,T=T AND S,,,,,,,,pop,
or,exclusive or,x16,bit-wise,10110,D:  x1 x2  -  x3,,,,,,T=T XOR S,,,,,,,,pop,
drop,,x17,stack,10111,D:  x  -  ,,,,,,T=S,S=data stack[8],,,,,,,pop,
dup,,x18,stack,11000,D:  x  -  x  x,,,,,,,S=T,,,,,,,push ,
pop,from R to T,x19,stack,11001,R:  x  -   D:  -  x,,,pop,,,T=R,,,,,,,,,push 
over,,x1A,stack,11010,D:  x1 x2  - x1 x2 x1,,,,,,T=S(t-),S=T,,,,,,,push,
a,fetch from register A,x1B,register,11011,D:  -  x,,,,,,T=A,,,,,,,,push,
.,nop,x1C,stack,11100,D:  -  ,,,,,,,,,,,,,,,
push,from T to R,x1D,stack,11101,D:  x  -   R:  -  x,,,R=T,,,,,,,,,,,,pop
b!,store to register B,x1E,register,11110,D:  x  -  ,,,,,B=T,,,,,,,,,pop,
a!,store to register A,x1F,register,11111,D:  x  -  ,,,,A=T,,,,,,,,,,pop,
RESET,,,,',,,,,,B=[io],,,,,,,,,,
